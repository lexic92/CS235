
//package cs235.xml;


public class Test {

    /**
     * Run tests on Text, Element, Document, Printer, and Parser objects.
     */
    public static void main(String[] args) {
    	testTextInterface();
    	testElementInterface();
    	testAppendChildInNodeInterface();
    }
    public static void testTextInterface(){
    	//Test the 'Text' interface.
    	System.out.println("\n-------------TESTING 'TEXT' INTERFACE-----------------\n");
    	
    	//1. Make a Text object.
    	Text t = Factory.createText("the string of text");
    	
    	//2. Check that 'getType' and 'getText' return the correct values.
    	System.out.println("Testing if TextImpl.getType() returns TokenType.TEXT_NODE:");
    	System.out.println(t.getType() == NodeType.TEXT_NODE ? "PASSED\n\n" : "FAILED\n\n");	

    	System.out.println("Testing if TextImpl.getText() returns the correct "+
    			"text it was initialized with: ");
    	System.out.println(t.getText().equals("the string of text")? "PASSED\n\n" : "FAILED\n\n");	
    	
    	
    	//3. Call 'setText' to change the data in the object.
    	t.setText("Different text");
    	
    	//4. Check that 'getText' returns the correct value.
    	System.out.println("Testing if TextImpl.getText() returns the correct "+
		"text \n(Just called TextImpl.setText() with different text):");
    	System.out.println(t.getText().equals("Different text")? "PASSED\n\n" : "FAILED\n\n");	

    	
    }
    public static void testElementInterface(){
    	//1. Make an 'Element' object.
    	Element e = Factory.createElement("The tag name");
    	
    	//2. Check that 'getType' and 'getTagName' return the correct values.
    	System.out.println("Testing if ElementImpl.getType() returns TokenType.ELEMENT_NODE:");
    	System.out.println(e.getType() == NodeType.ELEMENT_NODE ? "PASSED\n\n" : "FAILED\n\n");	

    	System.out.println("Testing if ElementImpl.getTagName() returns the correct "+
    			"tag name it was initialized with: ");
    	System.out.println(e.getTagName().equals("The tag name")? "PASSED\n\n" : "FAILED\n\n");	
    	
    	
    	//3. Call 'setTagName' and 'setAttribute' to change the data in the object. 
    	e.setTagName("New tag name");
    	e.setAttribute("Attribute name", "Attribute value");
    	
    	//4. Check that 'getTagName', 'getAttributeCount', 'getAttributeValue', and
    	//'getAttributeName' return the correct values.
    	System.out.println("--- Just called ElementImpl.setTagName() and ElementImpl."+
    			"setAttribute() ---\n");
    	
    	//getTagName
    	System.out.println("Testing if ElementImpl.getTagName() returns the correct "+
		"tag name it was changed to: ");
    	System.out.println(e.getTagName().equals("New tag name")? "PASSED\n\n" : "FAILED\n\n");	

    	//getAttributeCount = 1?
    	System.out.println("Check that ElementImpl.getAttributeCount() returns 1 "+
		"(since it just added an attribute): ");
    	System.out.println(e.getAttributeCount() == 1 ? "PASSED\n\n" : "FAILED\n\n");	

    	//getAttributeValue(string)
    	System.out.println("Check that ElementImpl.getAttributeValue(\"Attribute name\") "+
    			"returns the correct value:");
    	System.out.println(e.getAttributeValue("Attribute name").equals("Attribute value") ? 
    			"PASSED\n\n" : "FAILED\n\n");	
    	
    	//getAttributeValue(int)
    	System.out.println("Check that ElementImpl.getAttributeValue(\"index [an int]\") "+
		"returns the correct value:");
    	System.out.println(e.getAttributeValue(0).equals("Attribute value") ? 
    			"PASSED\n\n" : "FAILED\n\n");	

    	//getAttributeName(int)
    	System.out.println("Check that ElementImpl.getAttributeName(\"index [an int]\") "+
		"returns the correct attribute name:");
    	System.out.println(e.getAttributeName(0).equals("Attribute name") ? 
    			"PASSED\n\n" : "FAILED\n\n");

    }
    public static void testAppendChildInNodeInterface(){
    	// 1. Build a small tree out of 'Element' and 'Text' objects. Make an
    	// 'Element' object to serve as the parent. Make 2 or 3 'Text' and 
    	// 'Element' objects to serve as children. Call 'appendChild' to connect
    	// each child to the parent. 
    	
    	Element e = Factory.createElement("parent");
    	Text t = Factory.createText("text");
    	Element e2 = Factory.createElement("child");
    	
    	e.appendChild(t);
    	e.appendChild(e2);
    	
    	// 2. Call 'getParent', 'getFirstChild', 'getLastChild', 'getNextSibling',
    	// and 'getPrevSibling' on each node in the tree to check that the nodes
    	// in the tree are connected to each other correctly. 
    	
    	System.out.println("---------------TESTING APPEND CHILD----------------: ");
    	System.out.println("Appended text (tchild) and element (echild) nodes "+ 
    			"to an element parent.\n");
    	
    	System.out.println("Testing tchild.getParent():");
    	System.out.println(((Element)t.getParent()).getTagName().equals("parent") ? 
    			"PASSED\n\n" : "FAILED\n\n");
    	
    	System.out.println("Testing echild.getParent():");
    	System.out.println(((Element)e2.getParent()).getTagName().equals("parent") ? 
    			"PASSED\n\n" : "FAILED\n\n");
    	
    	System.out.println("Testing parent.getFirstChild():");
    	System.out.println(((Text) e.getFirstChild()).getText().equals("text") ? 
    			"PASSED\n\n" : "FAILED\n\n");
    	
    	System.out.println("Testing parent.getLastChild():");
    	System.out.println(((Element) e.getLastChild()).getTagName().equals("child") ? 
    			"PASSED\n\n" : "FAILED\n\n");
    	
    	System.out.println("Testing tchild.getNextSibling():");
    	System.out.println(((Element) t.getNextSibling()).getTagName().equals("child") ? 
    			"PASSED\n\n" : "FAILED\n\n");
    	
    	System.out.println("Testing cchild.getPreviousSibling():");
    	System.out.println(((Text) e2.getPrevSibling()).getText().equals("child") ? 
    			"PASSED\n\n" : "FAILED\n\n");
    	
    	
    	
    	
    }
}


